{"ast":null,"code":"import _classCallCheck from \"/Users/christinasunnegardh/RANDOM/KTH/dynamiskawebben/dynprog-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christinasunnegardh/RANDOM/KTH/dynamiskawebben/dynprog-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christinasunnegardh/RANDOM/KTH/dynamiskawebben/dynprog-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christinasunnegardh/RANDOM/KTH/dynamiskawebben/dynprog-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christinasunnegardh/RANDOM/KTH/dynamiskawebben/dynprog-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christinasunnegardh/RANDOM/KTH/dynamiskawebben/dynprog-project/src/Pages/LandingPage/LandingPage.js\";\nimport React, { Component } from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport Gallery from 'react-photo-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport './LandingPage.css';\nvar IMG_BASE_URL = 'http://image.tmdb.org/t/p/original/'; // the page after login, maybe some large images of new films and recommendations for the user?\n\nvar LandingPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LandingPage, _Component);\n\n  function LandingPage(props) {\n    var _this;\n\n    _classCallCheck(this, LandingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LandingPage).call(this, props));\n\n    _this.getNewMovies = function () {\n      _this.props.model.getMoviesInTheatre().then(function (data) {\n        var movies = data.results.slice(0, 5);\n\n        _this.setState({\n          loading: false,\n          newReleases: movies.map(function (movie) {\n            return {\n              // for the slider, thereby the little strange names\n              originalTitle: movie.id,\n              // the id instead of title so that we can get the movie from the api if clicked\n              original: IMG_BASE_URL + movie.backdrop_path,\n              // image\n              description: movie.title + ', release date: ' + movie.release_date // shown on picture\n\n            };\n          })\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    };\n\n    _this.getRecommendedMovies = function () {\n      _this.props.model.getRecommendedMovies().then(function (data) {\n        var movies = data.results.slice(0, 10);\n\n        _this.setState({\n          recommended: movies.map(function (movie) {\n            return {\n              key: movie.id,\n              src: IMG_BASE_URL + movie.backdrop_path,\n              width: 1,\n              height: 1\n            };\n          })\n        });\n      });\n    };\n\n    _this.handleClick = function (e) {\n      console.log(e.target.title); // actually gets the id\n    };\n\n    _this.state = {\n      bool: true,\n      newReleases: [],\n      loading: true,\n      recommended: []\n    };\n    return _this;\n  }\n\n  _createClass(LandingPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNewMovies();\n      this.getRecommendedMovies();\n    } // fills this.state.newReleases with 5 new movies\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container appContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.navbar, React.createElement(\"h4\", {\n        className: \"titles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Newest releases\"), this.state.loading && \"LOADING...\", !this.state.loading && React.createElement(ImageGallery, {\n        items: this.state.newReleases,\n        showThumbnails: false,\n        showFullscreenButton: false,\n        autoPlay: true,\n        showPlayButton: false,\n        onClick: this.handleClick,\n        showNav: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        className: \"titles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Recommended for you\"), React.createElement(Gallery, {\n        photos: this.state.recommended,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LandingPage;\n}(Component);\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/christinasunnegardh/RANDOM/KTH/dynamiskawebben/dynprog-project/src/Pages/LandingPage/LandingPage.js"],"names":["React","Component","ImageGallery","Gallery","IMG_BASE_URL","LandingPage","props","getNewMovies","model","getMoviesInTheatre","then","data","movies","results","slice","setState","loading","newReleases","map","movie","originalTitle","id","original","backdrop_path","description","title","release_date","catch","e","console","log","getRecommendedMovies","recommended","key","src","width","height","handleClick","target","state","bool","navbar"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ImageGallery from 'react-image-gallery'\nimport Gallery from 'react-photo-gallery'\nimport \"react-image-gallery/styles/css/image-gallery.css\"\nimport './LandingPage.css'\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/original/'\n\n// the page after login, maybe some large images of new films and recommendations for the user?\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            bool: true,\n            newReleases: [],\n            loading: true,\n            recommended: []\n        }\n    }\n\n\n    componentDidMount() {\n        this.getNewMovies()\n        this.getRecommendedMovies()\n    }\n\n    // fills this.state.newReleases with 5 new movies\n    getNewMovies = () => {\n        this.props.model.getMoviesInTheatre()\n            .then(data => {\n                const movies = data.results.slice(0,5)\n                this.setState({\n                    loading: false,\n                    newReleases: movies.map(movie => ({\n                        // for the slider, thereby the little strange names\n                        originalTitle: movie.id, // the id instead of title so that we can get the movie from the api if clicked\n                        original: IMG_BASE_URL + movie.backdrop_path, // image\n                        description: movie.title + ', release date: ' + movie.release_date, // shown on picture\n                    }))\n                })\n            })\n            .catch(e => console.log(e))\n    }\n\n    getRecommendedMovies = () => {\n        this.props.model.getRecommendedMovies()\n            .then(data => {\n                const movies = data.results.slice(0,10)\n                this.setState({\n                    recommended: movies.map(movie => ({\n                        key: movie.id,\n                        src: IMG_BASE_URL + movie.backdrop_path,\n                        width: 1,\n                        height: 1,\n                    }))\n                })\n            })\n    }\n\n    handleClick = (e) => {\n        console.log(e.target.title) // actually gets the id\n    }\n\n    render() {\n        return (\n            <div className=\"container appContainer\">\n                {this.props.navbar}\n\n                <h4 className=\"titles\">Newest releases</h4>\n                {this.state.loading && \"LOADING...\"}\n                {!this.state.loading &&\n                    <ImageGallery items={this.state.newReleases} showThumbnails={false} showFullscreenButton={false}\n                              autoPlay={true} showPlayButton={false} onClick={this.handleClick} showNav={false}/>\n                }\n\n                <h4 className=\"titles\">Recommended for you</h4>\n                <Gallery photos={this.state.recommended}/>\n\n            </div>\n        );\n    }\n}\n\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}